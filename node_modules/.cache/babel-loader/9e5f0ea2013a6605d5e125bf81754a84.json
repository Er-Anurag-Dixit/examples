{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/singlepost/commentsComponent.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Comment from \"./comment\";\nimport fetchData from \"../shared/sharedFunctions\";\nimport { Routes } from \"../config\";\nconst {\n  AllComments,\n  Comments,\n  ImageData\n} = Routes;\n\nconst CommentsComponent = props => {\n  const {\n    comment\n  } = props;\n  useEffect(() => {\n    allComments();\n  });\n  const [imageId, setImageId] = useState(\"\");\n  const [PostData, setPostData] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n\n  const allComments = () => {\n    const imageId = this.state.imageId;\n    const data = {\n      imageId: imageId\n    };\n    fetchData(AllComments, data).then(res => {\n      if (res) {\n        const allCommentData = res.data.dataFromDatabase.map(data => {\n          return data;\n        });\n        this.setState({\n          comment: allCommentData\n        });\n      }\n    }).catch(err => {\n      if (err.message === \"Network Error\") {\n        this.props.history.push(\"/errorpage\");\n      }\n    });\n  };\n\n  const uploadComment = event => {\n    var _localStorage, _this$state, _event$target, _event$target$comment;\n\n    event.preventDefault();\n    let userid = (_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.getItem(\"userId\");\n    const commentData = {\n      imageId: (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.imageId,\n      comment: (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$comment = _event$target.comment) === null || _event$target$comment === void 0 ? void 0 : _event$target$comment.value,\n      userId: userid\n    };\n    fetchData(Comments, commentData).then(res => {\n      if (res) {\n        var _res$data, _res$data$dataFromDat, _this$state2;\n\n        let comments = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$dataFromDat = _res$data.dataFromDatabase) === null || _res$data$dataFromDat === void 0 ? void 0 : _res$data$dataFromDat.map(data => {\n          return data;\n        });\n        let imageID = {\n          id: (_this$state2 = this.state) === null || _this$state2 === void 0 ? void 0 : _this$state2.imageId\n        };\n        fetchData(ImageData, imageID).then(res => {\n          if (res) {\n            var _res$data2;\n\n            this.setState({\n              PostData: [res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.dataBase[0]],\n              comment: [...comments]\n            });\n          }\n        });\n      }\n    }).catch(err => {\n      if (err.message === \"Network Error\") {\n        this.props.history.push(\"/errorpage\");\n      }\n    });\n    event.target.comment.value = null;\n  };\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, comment.map((names, i) => React.createElement(Comment, {\n    key: i,\n    comments: names,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cmnt_div1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: uploadComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your Comment\",\n    className: \"cmnt_bx1\",\n    name: \"comment\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"sub_bttn1\",\n    defaultValue: \"Submit Comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))));\n};\n\nexport default CommentsComponent;","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/singlepost/commentsComponent.js"],"names":["React","useEffect","useState","Comment","fetchData","Routes","AllComments","Comments","ImageData","CommentsComponent","props","comment","allComments","imageId","setImageId","PostData","setPostData","comments","setComments","state","data","then","res","allCommentData","dataFromDatabase","map","setState","catch","err","message","history","push","uploadComment","event","preventDefault","userid","localStorage","getItem","commentData","target","value","userId","imageID","id","dataBase","names","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Comment from \"./comment\";\nimport fetchData from \"../shared/sharedFunctions\";\nimport { Routes } from \"../config\";\nconst { AllComments, Comments, ImageData } = Routes;\n\nconst CommentsComponent = props => {\n  const { comment } = props;\n\n  useEffect(() => {\n    allComments();\n  });\n\n  const [imageId, setImageId] = useState(\"\");\n  const [PostData, setPostData] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n\n  const allComments = () => {\n    const imageId = this.state.imageId;\n    const data = {\n      imageId: imageId\n    };\n    fetchData(AllComments, data)\n      .then(res => {\n        if (res) {\n          const allCommentData = res.data.dataFromDatabase.map(data => {\n            return data;\n          });\n          this.setState({ comment: allCommentData });\n        }\n      })\n      .catch(err => {\n        if (err.message === \"Network Error\") {\n          this.props.history.push(\"/errorpage\");\n        }\n      });\n  };\n\n  const uploadComment = event => {\n    event.preventDefault();\n    let userid = localStorage?.getItem(\"userId\");\n    const commentData = {\n      imageId: this.state?.imageId,\n      comment: event.target?.comment?.value,\n      userId: userid\n    };\n    fetchData(Comments, commentData)\n      .then(res => {\n        if (res) {\n          let comments = res?.data?.dataFromDatabase?.map(data => {\n            return data;\n          });\n\n          let imageID = { id: this.state?.imageId };\n          fetchData(ImageData, imageID).then(res => {\n            if (res) {\n              this.setState({\n                PostData: [res?.data?.dataBase[0]],\n                comment: [...comments]\n              });\n            }\n          });\n        }\n      })\n      .catch(err => {\n        if (err.message === \"Network Error\") {\n          this.props.history.push(\"/errorpage\");\n        }\n      });\n    event.target.comment.value = null;\n  };\n\n  return (\n    <ul>\n      {comment.map((names, i) => (\n        <Comment key={i} comments={names} />\n      ))}\n      <li>\n        <div className=\"cmnt_div1\">\n          <form onSubmit={uploadComment}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your Comment\"\n              className=\"cmnt_bx1\"\n              name=\"comment\"\n              required\n            />\n            <input\n              type=\"submit\"\n              className=\"sub_bttn1\"\n              defaultValue=\"Submit Comment\"\n            />\n          </form>\n        </div>\n      </li>\n    </ul>\n  );\n};\nexport default CommentsComponent;\n"]},"metadata":{},"sourceType":"module"}