{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/timeline/timelineBodyComponent.js\";\nimport React from \"react\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport Helmet from \"react-helmet\";\nimport { FixedSizeList } from \"react-window\";\nimport PropTypes from \"prop-types\";\nimport Post from \"./posts\";\nimport Popup from \"./popup.js\";\nimport RightButton from \"./rightButton\";\nimport \"./style.css\";\nimport Featured from \"../shared/featured\";\nimport UserProfileComponent from \"./userProfileComponent\";\nimport Categories from \"../shared/categories\"; // import InfiniteScroll from \"react-infinite-scroller\";\n\nexport const TimelineBodyComponent = React.memo(props => {\n  const getPost = ({\n    index,\n    style\n  }) => {\n    if (props.postdata[index]) {\n      return React.createElement(Post, {\n        style: style,\n        data: props.postdata[index],\n        likePost: props.likePost,\n        downLoad: props.downLoad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  };\n\n  const {\n    togglePopup,\n    categoryUploadForm,\n    uploadCategory,\n    username,\n    showMyUploads,\n    stateUpdateOnTimelineClick,\n    handlePostUploadForm,\n    items,\n    loadMorePosts,\n    hasMoreItems,\n    postdata,\n    likePost,\n    hasError,\n    downLoad\n  } = props;\n\n  if (hasError) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Something is wrong\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Timeline\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content_rgt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(RightButton, {\n    togglePopup: togglePopup.bind(this),\n    categoryUploadForm: categoryUploadForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"category\",\n    onSubmit: uploadCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Categories, {\n    hasError: hasError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Featured, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content_lft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(UserProfileComponent, {\n    username: username,\n    showMyUploads: showMyUploads,\n    stateUpdateOnTimelineClick: stateUpdateOnTimelineClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.showPopup ? React.createElement(Popup, {\n    handleSubmit: handlePostUploadForm,\n    togglePopup: togglePopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }) : null), React.createElement(InfiniteLoader, {\n    isItemLoaded: () => {\n      return !hasMoreItems;\n    },\n    style: {\n      width: \"100\"\n    },\n    itemCount: 10,\n    loadMoreItems: () => {\n      loadMorePosts();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, ({\n    onItemsRendered,\n    ref\n  }) => React.createElement(FixedSizeList, {\n    height: 3000,\n    width: 750,\n    itemCount: 10,\n    itemSize: 650,\n    onItemsRendered: onItemsRendered,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, getPost))))));\n});\nTimelineBodyComponent.propTypes = {\n  logout: PropTypes.func,\n  togglePopup: PropTypes.func,\n  categoryUploadForm: PropTypes.func,\n  uploadCategory: PropTypes.func,\n  username: PropTypes.string,\n  showMyUploads: PropTypes.func,\n  stateUpdateOnTimelineClick: PropTypes.func,\n  handlePostUploadForm: PropTypes.func,\n  items: PropTypes.number,\n  loadMorePosts: PropTypes.func,\n  hasMoreItems: PropTypes.bool,\n  postdata: PropTypes.array,\n  likePost: PropTypes.func,\n  showPopup: PropTypes.bool\n};","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/timeline/timelineBodyComponent.js"],"names":["React","InfiniteLoader","Helmet","FixedSizeList","PropTypes","Post","Popup","RightButton","Featured","UserProfileComponent","Categories","TimelineBodyComponent","memo","props","getPost","index","style","postdata","likePost","downLoad","togglePopup","categoryUploadForm","uploadCategory","username","showMyUploads","stateUpdateOnTimelineClick","handlePostUploadForm","items","loadMorePosts","hasMoreItems","hasError","bind","showPopup","width","onItemsRendered","ref","propTypes","logout","func","string","number","bool","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport Helmet from \"react-helmet\";\nimport { FixedSizeList } from \"react-window\";\nimport PropTypes from \"prop-types\";\n\nimport Post from \"./posts\";\nimport Popup from \"./popup.js\";\nimport RightButton from \"./rightButton\";\nimport \"./style.css\";\nimport Featured from \"../shared/featured\";\nimport UserProfileComponent from \"./userProfileComponent\";\nimport Categories from \"../shared/categories\";\n// import InfiniteScroll from \"react-infinite-scroller\";\n\nexport const TimelineBodyComponent = React.memo(props => {\n  const getPost = ({ index, style }) => {\n    if (props.postdata[index]) {\n      return (\n        <Post\n          style={style}\n          data={props.postdata[index]}\n          likePost={props.likePost}\n          downLoad={props.downLoad}\n        />\n      );\n    } else {\n      return null;\n    }\n  };\n  const {\n    togglePopup,\n    categoryUploadForm,\n    uploadCategory,\n    username,\n    showMyUploads,\n    stateUpdateOnTimelineClick,\n    handlePostUploadForm,\n    items,\n    loadMorePosts,\n    hasMoreItems,\n    postdata,\n    likePost,\n    hasError,\n    downLoad\n  } = props;\n  if (hasError) {\n    return <div>Something is wrong</div>;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>Timeline</title>\n      </Helmet>\n      <div className=\"container\">\n        <div className=\"content\">\n          <div className=\"content_rgt\">\n            <RightButton\n              togglePopup={togglePopup.bind(this)}\n              categoryUploadForm={categoryUploadForm}\n            />\n\n            <form id=\"category\" onSubmit={uploadCategory}></form>\n            <Categories hasError={hasError} />\n            <Featured />\n          </div>\n          <div className=\"content_lft\">\n            <UserProfileComponent\n              username={username}\n              showMyUploads={showMyUploads}\n              stateUpdateOnTimelineClick={stateUpdateOnTimelineClick}\n            />\n            <div>\n              {props.showPopup ? (\n                <Popup\n                  handleSubmit={handlePostUploadForm}\n                  togglePopup={togglePopup}\n                />\n              ) : null}\n            </div>\n            <InfiniteLoader\n              isItemLoaded={() => {\n                return !hasMoreItems;\n              }}\n              style={{ width: \"100\" }}\n              itemCount={10}\n              loadMoreItems={() => {\n                loadMorePosts();\n              }}\n            >\n              {({ onItemsRendered, ref }) => (\n                <FixedSizeList\n                  height={3000}\n                  width={750}\n                  itemCount={10}\n                  itemSize={650}\n                  onItemsRendered={onItemsRendered}\n                  ref={ref}\n                >\n                  {getPost}\n                </FixedSizeList>\n              )}\n            </InfiniteLoader>\n            {/* <InfiniteScroll\n                loadMore={loadMorePosts}\n                hasMore={hasMoreItems}\n                loader={\n                  hasMoreItems ? (\n                    <div\n                      className=\"loader\"\n                      key={0}\n                      \n                      style={{ marginLeft: \"300px\" }}\n                    >\n                      {\" \"}\n                      <img\n                        src=\"images/giphy.gif\"\n                        style={{ width: \"10%\", height: \"10%\" }}\n                      ></img>\n                    </div>\n                  ) : (\n                    <div className=\"\" style={{ marginLeft: \"300px\" }}>\n                      <p style={{ width: \"20%\", height: \"10%\" }}>\n                        Yay! You have seen it all\n                      </p>\n                    </div>\n                  )\n                }\n              >\n                <ul>\n                  {postdata.map((names, i) => (\n                    <Post key={i} Postdata={names} likeFunction={likePost} />\n                  ))}\n                </ul>\n              </InfiniteScroll> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\nTimelineBodyComponent.propTypes = {\n  logout: PropTypes.func,\n  togglePopup: PropTypes.func,\n  categoryUploadForm: PropTypes.func,\n  uploadCategory: PropTypes.func,\n  username: PropTypes.string,\n  showMyUploads: PropTypes.func,\n  stateUpdateOnTimelineClick: PropTypes.func,\n  handlePostUploadForm: PropTypes.func,\n  items: PropTypes.number,\n  loadMorePosts: PropTypes.func,\n  hasMoreItems: PropTypes.bool,\n  postdata: PropTypes.array,\n  likePost: PropTypes.func,\n  showPopup: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}