{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/components/singlepost/commentsComponent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Comment from \"./comment\";\nimport serverCall from \"../../utilsFolder/utils\";\nimport { Routes } from \"../../config\";\nconst {\n  AllComments,\n  Comments\n} = Routes;\nconst CommentsComponent = React.memo(props => {\n  const {\n    imageID,\n    noOfComments,\n    updatePostData\n  } = props;\n  const [comment, setComment] = useState(props.comments);\n  useEffect(() => {\n    allComments();\n  }, [setComment, noOfComments]);\n\n  const allComments = () => {\n    const data = {\n      imageId: imageID\n    };\n    serverCall(AllComments, data).then(res => {\n      if (res && res.data) {\n        var _res$data$dataFromDat;\n\n        const allCommentData = (_res$data$dataFromDat = res.data.dataFromDatabase) === null || _res$data$dataFromDat === void 0 ? void 0 : _res$data$dataFromDat.map(data => {\n          return data;\n        });\n        setComment(allCommentData);\n      }\n    });\n  };\n\n  const uploadComment = event => {\n    var _localStorage, _event$target, _event$target$comment;\n\n    event.preventDefault();\n    let userid = (_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.getItem(\"userId\");\n    const commentData = {\n      imageId: imageID,\n      comment: (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$comment = _event$target.comment) === null || _event$target$comment === void 0 ? void 0 : _event$target$comment.value,\n      userId: userid\n    };\n    serverCall(Comments, commentData).then(res => {\n      if (res && res.data) {\n        updatePostData();\n      }\n    }).catch(err => {\n      if (err.message === \"Network Error\") {\n        this.props.history.push(\"/errorpage\");\n      }\n    });\n    event.target.comment.value = null;\n  };\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, comment ? comment.map((names, i) => React.createElement(Comment, {\n    key: i,\n    comments: names,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : null, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cmnt_div1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: uploadComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your Comment\",\n    className: \"cmnt_bx1\",\n    name: \"comment\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"sub_bttn1\",\n    defaultValue: \"Submit Comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))));\n});\nexport default CommentsComponent;","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/components/singlepost/commentsComponent.js"],"names":["React","useState","useEffect","Comment","serverCall","Routes","AllComments","Comments","CommentsComponent","memo","props","imageID","noOfComments","updatePostData","comment","setComment","comments","allComments","data","imageId","then","res","allCommentData","dataFromDatabase","map","uploadComment","event","preventDefault","userid","localStorage","getItem","commentData","target","value","userId","catch","err","message","history","push","names","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Comment from \"./comment\";\nimport serverCall from \"../../utilsFolder/utils\";\nimport { Routes } from \"../../config\";\n\nconst { AllComments, Comments } = Routes;\n\nconst CommentsComponent = React.memo(props => {\n  const { imageID, noOfComments, updatePostData } = props;\n  const [comment, setComment] = useState(props.comments);\n\n  useEffect(() => {\n    allComments();\n  }, [setComment, noOfComments]);\n\n  const allComments = () => {\n    const data = {\n      imageId: imageID\n    };\n    serverCall(AllComments, data).then(res => {\n      if (res && res.data) {\n        const allCommentData = res.data.dataFromDatabase?.map(data => {\n          return data;\n        });\n        setComment(allCommentData);\n      }\n    });\n  };\n\n  const uploadComment = event => {\n    event.preventDefault();\n    let userid = localStorage?.getItem(\"userId\");\n    const commentData = {\n      imageId: imageID,\n      comment: event.target?.comment?.value,\n      userId: userid\n    };\n    serverCall(Comments, commentData)\n      .then(res => {\n        if (res && res.data) {\n          updatePostData();\n        }\n      })\n      .catch(err => {\n        if (err.message === \"Network Error\") {\n          this.props.history.push(\"/errorpage\");\n        }\n      });\n    event.target.comment.value = null;\n  };\n\n  return (\n    <ul>\n      {comment\n        ? comment.map((names, i) => <Comment key={i} comments={names} />)\n        : null}\n      <li>\n        <div className=\"cmnt_div1\">\n          <form onSubmit={uploadComment}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your Comment\"\n              className=\"cmnt_bx1\"\n              name=\"comment\"\n              required\n            />\n            <input\n              type=\"submit\"\n              className=\"sub_bttn1\"\n              defaultValue=\"Submit Comment\"\n            />\n          </form>\n        </div>\n      </li>\n    </ul>\n  );\n});\nexport default CommentsComponent;\n"]},"metadata":{},"sourceType":"module"}