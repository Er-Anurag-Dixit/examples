{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/shared/CategoryComponent.js\";\nimport React from \"react\";\nimport CategoryForm from \"./categoryForm\";\nimport CategoryList from \"./categories\";\n\nconst CategoryComponent = props => {\n  const [clicked, setClicked] = useState(false);\n\n  const categoryUploadForm = () => {\n    if (!clicked) {\n      setClicked(true); // const form =\n      // \"category<input type='text' name='category' required/><br /><br /><input type='submit'/> &emsp;\";\n      // document.getElementById(\"category\").innerHTML = form;\n      // } else {\n      // document.getElementById(\"category\").innerHTML = \"\";\n      // clicked = false;\n    }\n  };\n\n  const uploadCategory = function (event) {\n    event.preventDefault();\n    let check = false;\n    props.category.map(data => {\n      if (data.category === event.target.category.value.toLowerCase()) {\n        check = true;\n      }\n    });\n\n    if (check) {\n      alert(\"This category already exist\");\n      event.target.category.value = \"\";\n    } else {\n      let newCategory = event.target.category.value;\n      const categoryToBeUploaded = {\n        category: newCategory\n      };\n      fetchData(Upload_Category, categoryToBeUploaded).then(res => {\n        if (res && res.data && res.data.status === \"Category Inserted\") {\n          var _res$data, _res$data$dataFromDat;\n\n          let allCategory = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$dataFromDat = _res$data.dataFromDatabase) === null || _res$data$dataFromDat === void 0 ? void 0 : _res$data$dataFromDat.map(data => {\n            return data;\n          });\n          this.props.updateCategory(allCategory);\n        } // if (res && res.data?.status === \"Already Exist\") {\n        // }\n\n      }).catch(err => {\n        if (err.message === \"Network Error\") {\n          this.props.history.push(\"/errorpage\");\n        }\n      });\n      setClicked(false);\n    }\n  }; //   const { clicked, uploadCategory } = props;\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, clicked ? React.createElement(CategoryForm, {\n    uploadCategory: uploadCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : null, React.createElement(CategoryList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default CategoryComponent;","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/shared/CategoryComponent.js"],"names":["React","CategoryForm","CategoryList","CategoryComponent","props","clicked","setClicked","useState","categoryUploadForm","uploadCategory","event","preventDefault","check","category","map","data","target","value","toLowerCase","alert","newCategory","categoryToBeUploaded","fetchData","Upload_Category","then","res","status","allCategory","dataFromDatabase","updateCategory","catch","err","message","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAI,CAACH,OAAL,EAAc;AACZC,MAAAA,UAAU,CAAC,IAAD,CAAV,CADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GAVD;;AAYA,QAAMG,cAAc,GAAG,UAASC,KAAT,EAAgB;AACrCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,KAAK,GAAG,KAAZ;AACAR,IAAAA,KAAK,CAACS,QAAN,CAAeC,GAAf,CAAmBC,IAAI,IAAI;AACzB,UAAIA,IAAI,CAACF,QAAL,KAAkBH,KAAK,CAACM,MAAN,CAAaH,QAAb,CAAsBI,KAAtB,CAA4BC,WAA5B,EAAtB,EAAiE;AAC/DN,QAAAA,KAAK,GAAG,IAAR;AACD;AACF,KAJD;;AAKA,QAAIA,KAAJ,EAAW;AACTO,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACAT,MAAAA,KAAK,CAACM,MAAN,CAAaH,QAAb,CAAsBI,KAAtB,GAA8B,EAA9B;AACD,KAHD,MAGO;AACL,UAAIG,WAAW,GAAGV,KAAK,CAACM,MAAN,CAAaH,QAAb,CAAsBI,KAAxC;AACA,YAAMI,oBAAoB,GAAG;AAAER,QAAAA,QAAQ,EAAEO;AAAZ,OAA7B;AACAE,MAAAA,SAAS,CAACC,eAAD,EAAkBF,oBAAlB,CAAT,CACGG,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,IAAIA,GAAG,CAACV,IAAX,IAAmBU,GAAG,CAACV,IAAJ,CAASW,MAAT,KAAoB,mBAA3C,EAAgE;AAAA;;AAC9D,cAAIC,WAAW,GAAGF,GAAH,aAAGA,GAAH,oCAAGA,GAAG,CAAEV,IAAR,uEAAG,UAAWa,gBAAd,0DAAG,sBAA6Bd,GAA7B,CAAiCC,IAAI,IAAI;AACzD,mBAAOA,IAAP;AACD,WAFiB,CAAlB;AAGA,eAAKX,KAAL,CAAWyB,cAAX,CAA0BF,WAA1B;AACD,SANU,CAOX;AACA;;AACD,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AACZ,YAAIA,GAAG,CAACC,OAAJ,KAAgB,eAApB,EAAqC;AACnC,eAAK5B,KAAL,CAAW6B,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;AACF,OAfH;AAgBA5B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAhCD,CAfiC,CAiDjC;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,GAAG,oBAAC,YAAD;AAAc,IAAA,cAAc,EAAEI,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsD,IADhE,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxDD;;AAyDA,eAAeN,iBAAf","sourcesContent":["import React from \"react\";\nimport CategoryForm from \"./categoryForm\";\nimport CategoryList from \"./categories\";\n\nconst CategoryComponent = props => {\n  const [clicked, setClicked] = useState(false);\n\n  const categoryUploadForm = () => {\n    if (!clicked) {\n      setClicked(true);\n      // const form =\n      // \"category<input type='text' name='category' required/><br /><br /><input type='submit'/> &emsp;\";\n      // document.getElementById(\"category\").innerHTML = form;\n      // } else {\n      // document.getElementById(\"category\").innerHTML = \"\";\n      // clicked = false;\n    }\n  };\n\n  const uploadCategory = function(event) {\n    event.preventDefault();\n    let check = false;\n    props.category.map(data => {\n      if (data.category === event.target.category.value.toLowerCase()) {\n        check = true;\n      }\n    });\n    if (check) {\n      alert(\"This category already exist\");\n      event.target.category.value = \"\";\n    } else {\n      let newCategory = event.target.category.value;\n      const categoryToBeUploaded = { category: newCategory };\n      fetchData(Upload_Category, categoryToBeUploaded)\n        .then(res => {\n          if (res && res.data && res.data.status === \"Category Inserted\") {\n            let allCategory = res?.data?.dataFromDatabase?.map(data => {\n              return data;\n            });\n            this.props.updateCategory(allCategory);\n          }\n          // if (res && res.data?.status === \"Already Exist\") {\n          // }\n        })\n        .catch(err => {\n          if (err.message === \"Network Error\") {\n            this.props.history.push(\"/errorpage\");\n          }\n        });\n      setClicked(false);\n    }\n  };\n\n  //   const { clicked, uploadCategory } = props;\n  return (\n    <div>\n      {clicked ? <CategoryForm uploadCategory={uploadCategory} /> : null}\n      <CategoryList />\n    </div>\n  );\n};\nexport default CategoryComponent;\n"]},"metadata":{},"sourceType":"module"}