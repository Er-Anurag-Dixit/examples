{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/timeline/timelineBodyComponent.js\";\nimport React, { useCallback, useState } from \"react\"; // import InfiniteLoader from \"react-window-infinite-loader\";\n\nimport Helmet from \"react-helmet\"; // import { FixedSizeList } from \"react-window\";\n\nimport PropTypes from \"prop-types\";\nimport Popup from \"./popup.js\";\nimport RightButton from \"./rightButton\";\nimport \"./style.css\";\nimport Featured from \"../shared/featured\";\nimport UserProfileComponent from \"./userProfileComponent\";\nimport Categories from \"../shared/categories\";\nimport Scroller from \"./scroller\";\nimport fetchData from \"../shared/sharedFunctions\";\nimport { Routes } from \"../config\";\nlet clicked = false;\nexport const TimelineBodyComponent = props => {\n  // const getPost = ({ index, style }) => {\n  //   if (props.postdata[index]) {\n  //     return (\n  //       <Post\n  //         style={style}\n  //         data={props.postdata[index]}\n  //         likePost={props.likePost}\n  //         downLoad={props.downLoad}\n  //       />\n  //     );\n  //   } else {\n  //     return null;\n  //   }\n  // };\n  // const callBackFunction = useCallback(\n  //   id => {\n  //     props.likePost(id);\n  //   },\n  //   [props.likePost]\n  // );\n  const categoryUploadForm = () => {\n    if (!clicked) {\n      clicked = true;\n      const form = \"category<input type='text' name='category' required/><br /><br /><input type='submit'/> &emsp;\";\n      document.getElementById(\"category\").innerHTML = form;\n    } else {\n      document.getElementById(\"category\").innerHTML = \"\";\n      clicked = false;\n    }\n  };\n\n  const uploadCategory = function (event) {\n    event.preventDefault();\n    let newCategory = event.target.category.value;\n    const categoryToBeUploaded = {\n      category: newCategory\n    };\n    fetchData(Category, categoryToBeUploaded).then(res => {\n      var _res$data2;\n\n      if (res && res.data && res.data.status === \"Category Inserted\") {\n        var _res$data, _res$data$dataFromDat;\n\n        let allCategory = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$dataFromDat = _res$data.dataFromDatabase) === null || _res$data$dataFromDat === void 0 ? void 0 : _res$data$dataFromDat.map(data => {\n          return data;\n        });\n        this.props.updateCategory(allCategory);\n      }\n\n      if (res && ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.status) === \"Already Exist\") {\n        alert(\"This category already exist\");\n      }\n    }).catch(err => {\n      if (err.message === \"Network Error\") {\n        this.props.history.push(\"/errorpage\");\n      }\n    });\n    clicked = false;\n    document.getElementById(\"category\").innerHTML = \"\";\n  };\n\n  const {\n    togglePopup,\n    // categoryUploadForm,\n    // uploadCategory,\n    username,\n    showMyUploads,\n    stateUpdateOnTimelineClick,\n    handlePostUploadForm,\n    items,\n    loadMorePosts,\n    hasMoreItems,\n    postdata,\n    likePost,\n    hasError,\n    downLoad\n  } = props;\n\n  if (hasError) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Something is wrong\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Timeline\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content_rgt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(RightButton, {\n    togglePopup: togglePopup.bind(this),\n    categoryUploadForm: categoryUploadForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"category\",\n    onSubmit: uploadCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Categories, {\n    hasError: hasError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Featured, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content_lft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(UserProfileComponent, {\n    username: username,\n    showMyUploads: showMyUploads,\n    stateUpdateOnTimelineClick: stateUpdateOnTimelineClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, props.showPopup ? React.createElement(Popup, {\n    handleSubmit: handlePostUploadForm,\n    togglePopup: togglePopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }) : null), React.createElement(Scroller, {\n    onlikePost: likePost,\n    postdata: postdata,\n    downLoad: downLoad,\n    loadMorePosts: loadMorePosts,\n    hasMoreItems: hasMoreItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })))));\n};\nTimelineBodyComponent.propTypes = {\n  logout: PropTypes.func,\n  togglePopup: PropTypes.func,\n  // categoryUploadForm: PropTypes.func,\n  uploadCategory: PropTypes.func,\n  username: PropTypes.string,\n  showMyUploads: PropTypes.func,\n  stateUpdateOnTimelineClick: PropTypes.func,\n  handlePostUploadForm: PropTypes.func,\n  items: PropTypes.number,\n  loadMorePosts: PropTypes.func,\n  hasMoreItems: PropTypes.bool,\n  postdata: PropTypes.array,\n  likePost: PropTypes.func,\n  showPopup: PropTypes.bool\n};","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/timeline/timelineBodyComponent.js"],"names":["React","useCallback","useState","Helmet","PropTypes","Popup","RightButton","Featured","UserProfileComponent","Categories","Scroller","fetchData","Routes","clicked","TimelineBodyComponent","props","categoryUploadForm","form","document","getElementById","innerHTML","uploadCategory","event","preventDefault","newCategory","target","category","value","categoryToBeUploaded","Category","then","res","data","status","allCategory","dataFromDatabase","map","updateCategory","alert","catch","err","message","history","push","togglePopup","username","showMyUploads","stateUpdateOnTimelineClick","handlePostUploadForm","items","loadMorePosts","hasMoreItems","postdata","likePost","hasError","downLoad","bind","showPopup","propTypes","logout","func","string","number","bool","array"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\n// import InfiniteLoader from \"react-window-infinite-loader\";\nimport Helmet from \"react-helmet\";\n// import { FixedSizeList } from \"react-window\";\nimport PropTypes from \"prop-types\";\n\nimport Popup from \"./popup.js\";\nimport RightButton from \"./rightButton\";\nimport \"./style.css\";\nimport Featured from \"../shared/featured\";\nimport UserProfileComponent from \"./userProfileComponent\";\nimport Categories from \"../shared/categories\";\nimport Scroller from \"./scroller\";\nimport fetchData from \"../shared/sharedFunctions\";\nimport { Routes } from \"../config\";\n\nlet clicked = false;\n\nexport const TimelineBodyComponent = props => {\n  // const getPost = ({ index, style }) => {\n  //   if (props.postdata[index]) {\n  //     return (\n  //       <Post\n  //         style={style}\n  //         data={props.postdata[index]}\n  //         likePost={props.likePost}\n  //         downLoad={props.downLoad}\n  //       />\n  //     );\n  //   } else {\n  //     return null;\n  //   }\n  // };\n  // const callBackFunction = useCallback(\n  //   id => {\n  //     props.likePost(id);\n  //   },\n  //   [props.likePost]\n  // );\n\n  const categoryUploadForm = () => {\n    if (!clicked) {\n      clicked = true;\n      const form =\n        \"category<input type='text' name='category' required/><br /><br /><input type='submit'/> &emsp;\";\n      document.getElementById(\"category\").innerHTML = form;\n    } else {\n      document.getElementById(\"category\").innerHTML = \"\";\n      clicked = false;\n    }\n  };\n\n  const uploadCategory = function(event) {\n    event.preventDefault();\n    let newCategory = event.target.category.value;\n    const categoryToBeUploaded = { category: newCategory };\n    fetchData(Category, categoryToBeUploaded)\n      .then(res => {\n        if (res && res.data && res.data.status === \"Category Inserted\") {\n          let allCategory = res?.data?.dataFromDatabase?.map(data => {\n            return data;\n          });\n          this.props.updateCategory(allCategory);\n        }\n        if (res && res.data?.status === \"Already Exist\") {\n          alert(\"This category already exist\");\n        }\n      })\n      .catch(err => {\n        if (err.message === \"Network Error\") {\n          this.props.history.push(\"/errorpage\");\n        }\n      });\n    clicked = false;\n    document.getElementById(\"category\").innerHTML = \"\";\n  };\n\n  const {\n    togglePopup,\n    // categoryUploadForm,\n    // uploadCategory,\n    username,\n    showMyUploads,\n    stateUpdateOnTimelineClick,\n    handlePostUploadForm,\n    items,\n    loadMorePosts,\n    hasMoreItems,\n    postdata,\n    likePost,\n    hasError,\n    downLoad\n  } = props;\n  if (hasError) {\n    return <div>Something is wrong</div>;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>Timeline</title>\n      </Helmet>\n      <div className=\"container\">\n        <div className=\"content\">\n          <div className=\"content_rgt\">\n            <RightButton\n              togglePopup={togglePopup.bind(this)}\n              categoryUploadForm={categoryUploadForm}\n            />\n            <form id=\"category\" onSubmit={uploadCategory}></form>\n            <Categories hasError={hasError} />\n            <Featured />\n          </div>\n          <div className=\"content_lft\">\n            <UserProfileComponent\n              username={username}\n              showMyUploads={showMyUploads}\n              stateUpdateOnTimelineClick={stateUpdateOnTimelineClick}\n            />\n            <div>\n              {props.showPopup ? (\n                <Popup\n                  handleSubmit={handlePostUploadForm}\n                  togglePopup={togglePopup}\n                />\n              ) : null}\n            </div>\n            {/* <InfiniteLoader\n                isItemLoaded={() => {\n                  return !hasMoreItems;\n                }}\n                style={{ width: \"100\" }}\n                itemCount={10}\n                loadMoreItems={() => {\n                  loadMorePosts();\n                }}\n              >\n                {({ onItemsRendered, ref }) => (\n                  <FixedSizeList\n                    height={3000}\n                    width={750}\n                    itemCount={10}\n                    itemSize={650}\n                    onItemsRendered={onItemsRendered}\n                    ref={ref}\n                  >\n                    {getPost}\n                  </FixedSizeList>\n                )}\n              </InfiniteLoader> */}\n            <Scroller\n              onlikePost={likePost}\n              postdata={postdata}\n              downLoad={downLoad}\n              loadMorePosts={loadMorePosts}\n              hasMoreItems={hasMoreItems}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nTimelineBodyComponent.propTypes = {\n  logout: PropTypes.func,\n  togglePopup: PropTypes.func,\n  // categoryUploadForm: PropTypes.func,\n  uploadCategory: PropTypes.func,\n  username: PropTypes.string,\n  showMyUploads: PropTypes.func,\n  stateUpdateOnTimelineClick: PropTypes.func,\n  handlePostUploadForm: PropTypes.func,\n  items: PropTypes.number,\n  loadMorePosts: PropTypes.func,\n  hasMoreItems: PropTypes.bool,\n  postdata: PropTypes.array,\n  likePost: PropTypes.func,\n  showPopup: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}