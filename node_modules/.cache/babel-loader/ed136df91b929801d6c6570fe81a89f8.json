{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/timeline/timelineBodyComponent.js\";\nimport React, { useCallback, useState } from \"react\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport Helmet from \"react-helmet\";\nimport { FixedSizeList } from \"react-window\";\nimport PropTypes from \"prop-types\";\nimport Popup from \"./popup.js\";\nimport RightButton from \"./rightButton\";\nimport \"./style.css\";\nimport Featured from \"../shared/featured\";\nimport UserProfileComponent from \"./userProfileComponent\";\nimport Categories from \"../shared/categories\";\nimport Scroller from \"./scroller\";\nexport const TimelineBodyComponent = props => {\n  // const getPost = ({ index, style }) => {\n  //   if (props.postdata[index]) {\n  //     return (\n  //       <Post\n  //         style={style}\n  //         data={props.postdata[index]}\n  //         likePost={props.likePost}\n  //         downLoad={props.downLoad}\n  //       />\n  //     );\n  //   } else {\n  //     return null;\n  //   }\n  // };\n  // const callBackFunction = useCallback(\n  //   id => {\n  //     props.likePost(id);\n  //   },\n  //   [props.likePost]\n  // );\n  const {\n    togglePopup,\n    categoryUploadForm,\n    uploadCategory,\n    username,\n    showMyUploads,\n    stateUpdateOnTimelineClick,\n    handlePostUploadForm,\n    items,\n    loadMorePosts,\n    hasMoreItems,\n    postdata,\n    likePost,\n    hasError,\n    downLoad\n  } = props;\n\n  if (hasError) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Something is wrong\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Timeline\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content_rgt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(RightButton, {\n    togglePopup: togglePopup.bind(this),\n    categoryUploadForm: categoryUploadForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    id: \"category\",\n    onSubmit: uploadCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Categories, {\n    hasError: hasError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Featured, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content_lft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(UserProfileComponent, {\n    username: username,\n    showMyUploads: showMyUploads,\n    stateUpdateOnTimelineClick: stateUpdateOnTimelineClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.showPopup ? React.createElement(Popup, {\n    handleSubmit: handlePostUploadForm,\n    togglePopup: togglePopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : null), React.createElement(Scroller, {\n    onlikePost: likePost,\n    downLoad: downLoad,\n    hasMoreItems: hasMoreItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))));\n};\nTimelineBodyComponent.propTypes = {\n  logout: PropTypes.func,\n  togglePopup: PropTypes.func,\n  categoryUploadForm: PropTypes.func,\n  uploadCategory: PropTypes.func,\n  username: PropTypes.string,\n  showMyUploads: PropTypes.func,\n  stateUpdateOnTimelineClick: PropTypes.func,\n  handlePostUploadForm: PropTypes.func,\n  items: PropTypes.number,\n  loadMorePosts: PropTypes.func,\n  hasMoreItems: PropTypes.bool,\n  postdata: PropTypes.array,\n  likePost: PropTypes.func,\n  showPopup: PropTypes.bool\n};","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/timeline/timelineBodyComponent.js"],"names":["React","useCallback","useState","InfiniteLoader","Helmet","FixedSizeList","PropTypes","Popup","RightButton","Featured","UserProfileComponent","Categories","Scroller","TimelineBodyComponent","props","togglePopup","categoryUploadForm","uploadCategory","username","showMyUploads","stateUpdateOnTimelineClick","handlePostUploadForm","items","loadMorePosts","hasMoreItems","postdata","likePost","hasError","downLoad","bind","showPopup","propTypes","logout","func","string","number","bool","array"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport Helmet from \"react-helmet\";\nimport { FixedSizeList } from \"react-window\";\nimport PropTypes from \"prop-types\";\n\nimport Popup from \"./popup.js\";\nimport RightButton from \"./rightButton\";\nimport \"./style.css\";\nimport Featured from \"../shared/featured\";\nimport UserProfileComponent from \"./userProfileComponent\";\nimport Categories from \"../shared/categories\";\nimport Scroller from \"./scroller\";\nexport const TimelineBodyComponent = props => {\n  // const getPost = ({ index, style }) => {\n  //   if (props.postdata[index]) {\n  //     return (\n  //       <Post\n  //         style={style}\n  //         data={props.postdata[index]}\n  //         likePost={props.likePost}\n  //         downLoad={props.downLoad}\n  //       />\n  //     );\n  //   } else {\n  //     return null;\n  //   }\n  // };\n  // const callBackFunction = useCallback(\n  //   id => {\n  //     props.likePost(id);\n  //   },\n  //   [props.likePost]\n  // );\n  const {\n    togglePopup,\n    categoryUploadForm,\n    uploadCategory,\n    username,\n    showMyUploads,\n    stateUpdateOnTimelineClick,\n    handlePostUploadForm,\n    items,\n    loadMorePosts,\n    hasMoreItems,\n    postdata,\n    likePost,\n    hasError,\n    downLoad\n  } = props;\n  if (hasError) {\n    return <div>Something is wrong</div>;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>Timeline</title>\n      </Helmet>\n      <div className=\"container\">\n        <div className=\"content\">\n          <div className=\"content_rgt\">\n            <RightButton\n              togglePopup={togglePopup.bind(this)}\n              categoryUploadForm={categoryUploadForm}\n            />\n            <form id=\"category\" onSubmit={uploadCategory}></form>\n            <Categories hasError={hasError} />\n            <Featured />\n          </div>\n          <div className=\"content_lft\">\n            <UserProfileComponent\n              username={username}\n              showMyUploads={showMyUploads}\n              stateUpdateOnTimelineClick={stateUpdateOnTimelineClick}\n            />\n            <div>\n              {props.showPopup ? (\n                <Popup\n                  handleSubmit={handlePostUploadForm}\n                  togglePopup={togglePopup}\n                />\n              ) : null}\n            </div>\n            {/* <InfiniteLoader\n                isItemLoaded={() => {\n                  return !hasMoreItems;\n                }}\n                style={{ width: \"100\" }}\n                itemCount={10}\n                loadMoreItems={() => {\n                  loadMorePosts();\n                }}\n              >\n                {({ onItemsRendered, ref }) => (\n                  <FixedSizeList\n                    height={3000}\n                    width={750}\n                    itemCount={10}\n                    itemSize={650}\n                    onItemsRendered={onItemsRendered}\n                    ref={ref}\n                  >\n                    {getPost}\n                  </FixedSizeList>\n                )}\n              </InfiniteLoader> */}\n            <Scroller\n              onlikePost={likePost}\n              downLoad={downLoad}\n              hasMoreItems={hasMoreItems}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nTimelineBodyComponent.propTypes = {\n  logout: PropTypes.func,\n  togglePopup: PropTypes.func,\n  categoryUploadForm: PropTypes.func,\n  uploadCategory: PropTypes.func,\n  username: PropTypes.string,\n  showMyUploads: PropTypes.func,\n  stateUpdateOnTimelineClick: PropTypes.func,\n  handlePostUploadForm: PropTypes.func,\n  items: PropTypes.number,\n  loadMorePosts: PropTypes.func,\n  hasMoreItems: PropTypes.bool,\n  postdata: PropTypes.array,\n  likePost: PropTypes.func,\n  showPopup: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}