{"ast":null,"code":"var _jsxFileName = \"/home/com109/Desktop/ad/my-app/src/components/shared/categories.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { updateCategories } from \"../../redux/actions\";\nimport Category from \"./category\";\nimport { Routes } from \"../../config\";\nimport serverCall from \"../utilsFolder/utils\";\nconst {\n  AllCategory\n} = Routes; // class CategoryList extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//   }\n//   allcategories = () => {\n//     serverCall(AllCategory)\n//       .then(res => {\n//         if (res && res.data) {\n//           let allCategoryData = res.data?.dataFromDatabase?.map(category => {\n//             return category;\n//           });\n//           this.props.updateCategory(allCategoryData);\n//         }\n//       })\n//       .catch(err => {\n//         this.setState({ hasError: true });\n//       });\n//   };\n//   componentDidMount() {\n//     this.allcategories();\n//   }\n//   render() {\n//     const { category } = this.props;\n//     const { hasError } = this.state;\n//     if (hasError) {\n//       return <div>Something went wrong</div>;\n//     }\n//     return (\n//       <div className=\"rght_cate\">\n//         <div className=\"rght_cate_hd\" id=\"rght_cat_bg\">\n//           Categories\n//         </div>\n//         <br /> <br /> <br />\n//         <div className=\"rght_list\">\n//           <ul style={{ borderRadius: \"50em\" }}>\n//             {category.map((names, i) => (\n//               <Category key={i} categoryData={names.category} />\n//             ))}\n//             <li style={{ border: \"outset\" }}>\n//               <a href=\"#\">\n//                 <span className=\"list_icon\">\n//                   <img src=\"/images/icon_05.png\" alt=\"up\" />\n//                 </span>{\" \"}\n//                 Others\n//               </a>\n//             </li>\n//           </ul>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nconst CategoryList = React.memo(props => {\n  const allcategories = () => {\n    serverCall(AllCategory).then(res => {\n      if (res && res.data) {\n        var _res$data, _res$data$dataFromDat;\n\n        let allCategoryData = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$dataFromDat = _res$data.dataFromDatabase) === null || _res$data$dataFromDat === void 0 ? void 0 : _res$data$dataFromDat.map(category => {\n          return category;\n        });\n        props.updateCategory(allCategoryData);\n      }\n    });\n  };\n\n  useEffect(() => {\n    allcategories();\n  }, [props.updateCategory]);\n  const {\n    category\n  } = props;\n  return React.createElement(\"div\", {\n    className: \"rght_cate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rght_cate_hd\",\n    id: \"rght_cat_bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Categories\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"rght_list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    style: {\n      borderRadius: \"50em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, category.map((names, i) => React.createElement(Category, {\n    key: i,\n    categoryData: names.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    style: {\n      border: \"outset\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"list_icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/icon_05.png\",\n    alt: \"up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), \" \", \"Others\")))));\n});\nCategoryList.propTypes = {\n  category: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    category: state.CategoryReducer.category\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCategory: data => dispatch(updateCategories(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);","map":{"version":3,"sources":["/home/com109/Desktop/ad/my-app/src/components/shared/categories.js"],"names":["React","useEffect","connect","PropTypes","updateCategories","Category","Routes","serverCall","AllCategory","CategoryList","memo","props","allcategories","then","res","data","allCategoryData","dataFromDatabase","map","category","updateCategory","borderRadius","names","i","border","propTypes","array","mapStateToProps","state","CategoryReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { updateCategories } from \"../../redux/actions\";\nimport Category from \"./category\";\nimport { Routes } from \"../../config\";\nimport serverCall from \"../utilsFolder/utils\";\n\nconst { AllCategory } = Routes;\n\n// class CategoryList extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//   }\n\n//   allcategories = () => {\n//     serverCall(AllCategory)\n//       .then(res => {\n//         if (res && res.data) {\n//           let allCategoryData = res.data?.dataFromDatabase?.map(category => {\n//             return category;\n//           });\n//           this.props.updateCategory(allCategoryData);\n//         }\n//       })\n//       .catch(err => {\n//         this.setState({ hasError: true });\n//       });\n//   };\n\n//   componentDidMount() {\n//     this.allcategories();\n//   }\n\n//   render() {\n//     const { category } = this.props;\n//     const { hasError } = this.state;\n//     if (hasError) {\n//       return <div>Something went wrong</div>;\n//     }\n//     return (\n//       <div className=\"rght_cate\">\n//         <div className=\"rght_cate_hd\" id=\"rght_cat_bg\">\n//           Categories\n//         </div>\n//         <br /> <br /> <br />\n//         <div className=\"rght_list\">\n//           <ul style={{ borderRadius: \"50em\" }}>\n//             {category.map((names, i) => (\n//               <Category key={i} categoryData={names.category} />\n//             ))}\n//             <li style={{ border: \"outset\" }}>\n//               <a href=\"#\">\n//                 <span className=\"list_icon\">\n//                   <img src=\"/images/icon_05.png\" alt=\"up\" />\n//                 </span>{\" \"}\n//                 Others\n//               </a>\n//             </li>\n//           </ul>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nconst CategoryList = React.memo(props => {\n  const allcategories = () => {\n    serverCall(AllCategory).then(res => {\n      if (res && res.data) {\n        let allCategoryData = res.data?.dataFromDatabase?.map(category => {\n          return category;\n        });\n        props.updateCategory(allCategoryData);\n      }\n    });\n  };\n\n  useEffect(() => {\n    allcategories();\n  }, [props.updateCategory]);\n\n  const { category } = props;\n\n  return (\n    <div className=\"rght_cate\">\n      <div className=\"rght_cate_hd\" id=\"rght_cat_bg\">\n        Categories\n      </div>\n      <br /> <br /> <br />\n      <div className=\"rght_list\">\n        <ul style={{ borderRadius: \"50em\" }}>\n          {category.map((names, i) => (\n            <Category key={i} categoryData={names.category} />\n          ))}\n          <li style={{ border: \"outset\" }}>\n            <a href=\"#\">\n              <span className=\"list_icon\">\n                <img src=\"/images/icon_05.png\" alt=\"up\" />\n              </span>{\" \"}\n              Others\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nCategoryList.propTypes = {\n  category: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return { category: state.CategoryReducer.category };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCategory: data => dispatch(updateCategories(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\n"]},"metadata":{},"sourceType":"module"}